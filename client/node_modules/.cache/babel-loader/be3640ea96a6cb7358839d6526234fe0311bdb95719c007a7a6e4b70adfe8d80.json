{"ast":null,"code":"var _jsxFileName = \"/home/sangeet/client/src/components/Header.tsx\",\n  _s = $RefreshSig$();\nimport { AppBar, Container, Toolbar } from \"@mui/material\";\nimport { FlexRow, MainText } from \"../theme/theme\";\nimport React, { useMemo } from 'react';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { GlowWalletAdapter, LedgerWalletAdapter, PhantomWalletAdapter, SlopeWalletAdapter, SolflareWalletAdapter, SolletExtensionWalletAdapter, SolletWalletAdapter, TorusWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport { Buffer } from 'buffer';\n\n// Default styles that can be overridden by your app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n// import { SolanaWallets } from \"glitter-bridge-sdk-dev/dist\";\n\nconst Header = () => {\n  // @ts-ignore\n  window.Buffer = Buffer;\n  return /*#__PURE__*/_jsxDEV(Context, {\n    children: /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_c = Header;\nexport default Header;\nconst Context = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Mainnet;\n\n  // You can also provide a custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n  // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n  // Only the wallets you configure here will be compiled into your application, and only the dependencies\n  // of wallets that your users connect to will be loaded.\n  const wallets = useMemo(() => [\n  // solana.connectToPhantomWallet(),\n  // solana.connectToSolfareWallet()\n  new LedgerWalletAdapter(), new PhantomWalletAdapter(), new GlowWalletAdapter(), new SlopeWalletAdapter(), new SolletExtensionWalletAdapter(), new SolletWalletAdapter(), new SolflareWalletAdapter({\n    network\n  }), new TorusWalletAdapter()], [network]);\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      autoConnect: true,\n      children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(Context, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n_c2 = Context;\nconst Content = () => {\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    position: \"static\",\n    sx: {\n      backgroundColor: 'transparent'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        disableGutters: true,\n        children: /*#__PURE__*/_jsxDEV(FlexRow, {\n          className: \"header\",\n          children: [/*#__PURE__*/_jsxDEV(MainText, {\n            className: \"Head\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 1\n  }, this);\n};\n_c3 = Content;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Context\");\n$RefreshReg$(_c3, \"Content\");","map":{"version":3,"names":["AppBar","Container","Toolbar","FlexRow","MainText","React","useMemo","ConnectionProvider","WalletProvider","WalletAdapterNetwork","WalletModalProvider","WalletMultiButton","clusterApiUrl","GlowWalletAdapter","LedgerWalletAdapter","PhantomWalletAdapter","SlopeWalletAdapter","SolflareWalletAdapter","SolletExtensionWalletAdapter","SolletWalletAdapter","TorusWalletAdapter","Buffer","jsxDEV","_jsxDEV","require","Header","window","Context","children","Content","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref","_s","network","Mainnet","endpoint","wallets","autoConnect","_c2","position","sx","backgroundColor","maxWidth","disableGutters","className","_c3","$RefreshReg$"],"sources":["/home/sangeet/client/src/components/Header.tsx"],"sourcesContent":["import { AppBar,Container, Toolbar } from \"@mui/material\"\nimport { SBox,FlexRow,MainText } from \"../theme/theme\"\n\nimport React, { FC, useMemo,ReactNode } from 'react';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { UnsafeBurnerWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport {\n    WalletModalProvider,\n    WalletDisconnectButton,\n    WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport {\n    GlowWalletAdapter,\n    LedgerWalletAdapter,\n    PhantomWalletAdapter,\n    SlopeWalletAdapter,\n    SolflareWalletAdapter,\n    SolletExtensionWalletAdapter,\n    SolletWalletAdapter,\n    TorusWalletAdapter,\n\n} from '@solana/wallet-adapter-wallets';\nimport { Buffer } from 'buffer';\n\n// Default styles that can be overridden by your app\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n\n// import { SolanaWallets } from \"glitter-bridge-sdk-dev/dist\";\n\n\n\nconst Header: FC = () => {\n  \n   // @ts-ignore\nwindow.Buffer = Buffer;\n\n    return (\n        <Context>\n            <Content />\n        </Context>\n    );\n};\n\nexport default Header;\n\nconst Context: FC<{ children: ReactNode }> = ({ children }) => {\n    // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n    const network = WalletAdapterNetwork.Mainnet;\n\n    // You can also provide a custom RPC endpoint.\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n\n    // @solana/wallet-adapter-wallets includes all the adapters but supports tree shaking and lazy loading --\n    // Only the wallets you configure here will be compiled into your application, and only the dependencies\n    // of wallets that your users connect to will be loaded.\n    const wallets = useMemo(\n        () => [\n            // solana.connectToPhantomWallet(),\n            // solana.connectToSolfareWallet()\n            new LedgerWalletAdapter(),\n            new PhantomWalletAdapter(),\n            new GlowWalletAdapter(),\n            new SlopeWalletAdapter(),\n            new SolletExtensionWalletAdapter(), \n            new SolletWalletAdapter(),\n            new SolflareWalletAdapter({ network }),\n            new TorusWalletAdapter(),\n        ],\n        [network]\n    );\n   \n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n                <WalletModalProvider>{children}</WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};\n\n\n\n const Content: FC = () => {\n    return(\n<AppBar position='static' sx={{backgroundColor:'transparent'}} >\n<Container maxWidth='xl'>\n<Toolbar disableGutters>\n<FlexRow className=\"header\">\n<MainText className='Head'></MainText>\n<WalletMultiButton/>\n</FlexRow>\n</Toolbar>\n</Container>\n</AppBar>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}